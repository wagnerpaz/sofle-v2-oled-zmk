/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 28>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <31 32>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        KL-end {
            bindings = <&kp END>;
            key-positions = <32 33>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        ER-autocomplete {
            bindings = <&kp LC(SPACE)>;
            key-positions = <15 16>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <28 29>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <19 20>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <20 21>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        win_paste {
            bindings = <&kp LG(V)>;
            key-positions = <28 41>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        refresh {
            bindings = <&kp LC(R)>;
            key-positions = <3 4>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        ctrl_end {
            bindings = <&kp LC(END)>;
            key-positions = <46 47>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };

        ctrl_home {
            bindings = <&kp LC(HOME)>;
            key-positions = <45 46>;
            require-prior-idle-ms = <200>;
            timeout-ms = <30>;
        };
    };

    macros {
        run_dev: run_dev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp P &kp M &kp SPACE &kp R &kp U &kp N &kp SPACE &kp D &kp E &kp V>;
            label = "RUN_DEV";
        };

        secret_1: secret_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp N0 &kp P &kp UNDER &kp UNDER &kp N1 &kp N9 &kp N8 &kp N6>;
            label = "SECRET_1";
        };

        console_log: console_log {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp O &kp L &kp E &kp DOT &kp L &kp O &kp G &kp LPAR &kp LEFT_BRACE &kp RBRC &kp RPAR &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "CONSOLE_LOG";
        };

        arrow_func: arrow_func {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW_FUNC";
        };

        vscode_pin: vscode_pin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K) &kp LS(ENTER)>;
            label = "VSCODE_PIN";
        };

        secret_2: secret_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(W) &kp N0 &kp P &kp UNDER &kp UNDER &kp N1 &kp N9 &kp N8 &kp N6 &kp AT>;
            label = "SECRET_2";
        };

        select_line: select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp END>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp HOME>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SELECT_LINE";
        };

        pin_1: pin_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp N0 &kp N0 &kp N8 &kp N6 &kp N1 &kp N5>;
            label = "PIN_1";
        };

        vs_source_control: vs_source_control {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(G)) &kp G>;
            label = "VS_SOURCE_CONTROL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&gresc            &mt LC(LA(N1)) NUMBER_1  &mt LC(LA(NUMBER_2)) NUMBER_2  &kp N3        &kp N4        &kp N5                                         &kp N6  &kp N7         &kp N8         &kp N9         &kp N0    &kp LS(LEFT_ALT)
&kp TAB           &kp Q                    &kp W                          &kp E         &kp R         &kp T                                          &kp Y   &kp U          &kp I          &kp O          &kp P     &kp GRAVE
&kp LEFT_SHIFT    &kp A                    &kp S                          &kp D         &kp F         &kp G                                          &kp H   &kp J          &kp K          &kp L          &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z                    &kp X                          &kp C         &kp V         &kp B   &kp C_PLAY_PAUSE    &kp LG(LS(GRAVE))  &kp N   &kp M          &kp COMMA      &kp DOT        &kp FSLH  &sl 4
                                           &kp LEFT_ALT                   &kp LEFT_WIN  &lt 4 DELETE  &mo 1   &kp RET             &kp SPACE          &mo 2   &kp BACKSPACE  &kp RIGHT_GUI  &kp RIGHT_ALT
            >;

            sensor-bindings =
                <&inc_dec_kp UP_ARROW DOWN_ARROW>,
                <&inc_dec_kp RIGHT LEFT_ARROW>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F11  &kp F1           &kp F2       &kp F3    &kp F4            &kp F5                                   &kp F6       &kp F7         &kp F8         &kp F9                &kp F10                &kp F11
&kp F12  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR        &kp PERCENT                              &kp CARET    &kp AMPERSAND  &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F12
&trans   &kp EQUAL        &kp MINUS    &kp PLUS  &kp LEFT_BRACE    &kp RIGHT_BRACE                          &kp CARET    &kp AMPS       &kp ASTERISK   &kp LPAR              &kp RPAR               &kp PIPE
&trans   &none            &kp UNDER    &none     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans        &trans  &arrow_func  &none          &kp SEMICOLON  &kp COLON             &kp BSLH               &trans
                          &trans       &trans    &bootloader       &trans             &sys_reset    &trans  &trans       &kp LC(Z)      &trans         &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp TAB LS(TAB)>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&none   &run_dev  &console_log  &none   &none   &none                           &secret_1  &secret_2    &pin_1    &trans         &trans   &trans
&trans  &kp INS   &kp PSCRN     &trans  &trans  &trans                          &trans     &kp PAGE_UP  &kp UP    &kp PAGE_DOWN  &trans   &trans
&trans  &trans    &trans        &trans  &trans  &kp CLCK                        &kp HOME   &kp LEFT     &kp DOWN  &kp RIGHT      &kp END  &trans
&trans  &trans    &trans        &trans  &trans  &trans    &trans    &trans      &trans     &trans       &trans    &trans         &trans   &trans
                  &trans        &trans  &trans  &trans    &trans    &sys_reset  &trans     &bootloader  &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&ext_power EP_OFF  &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&ext_power EP_ON   &none         &none         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none  &none
                                 &none         &none         &none         &none         &none    &none  &none  &none  &none  &none
            >;
        };

        editor {
            bindings = <
&trans  &kp LC(LS(E))  &vs_source_control  &trans                    &trans                     &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(X)      &none               &kp LC(LS(LEFT_BRACKET))  &kp LS(LC(RIGHT_BRACKET))  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &vscode_pin    &select_line        &kp LS(LA(LEFT_ARROW))    &kp LS(LA(RIGHT_ARROW))    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans              &trans                    &trans                     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                       &trans              &trans                    &trans                     &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp F8 LS(F8)>,
                <&inc_dec_kp LS(LA(RIGHT_ARROW)) LS(LA(LEFT_ARROW))>;

            label = "editor";
        };
    };
};
